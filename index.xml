<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>beomdo-park&#39;s ml/dl blog</title>
<link>https://beomdo-park.github.io/</link>
<atom:link href="https://beomdo-park.github.io/index.xml" rel="self" type="application/rss+xml"/>
<description>머신러닝, 데이터 분석, AI 블로그</description>
<generator>quarto-1.7.31</generator>
<lastBuildDate>Sat, 24 May 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>[2025 ABC 프로젝트 멘토링 8기] 프로젝트 1주차</title>
  <dc:creator>Beomdo Park</dc:creator>
  <link>https://beomdo-park.github.io/posts/ABC_week01_data analysis/</link>
  <description><![CDATA[ 





<p>1주차로 기초 시계열 분석을 진행</p>
<section id="시계열-데이터란" class="level2">
<h2 class="anchored" data-anchor-id="시계열-데이터란">시계열 데이터란?</h2>
<p>시계열 데이터(Time Series Data)는 시간 순서대로 정렬된 데이터 포인터들의 연속입니다. 예를 들어, 주식 가격, 월별 강수량, 웹사이트 트래픽 등이 시계열 데이터에 해당합니다. 이러한 데이터는 시간의 흐름에 따른 패턴이나 추세를 분석하는 데 사용됩니다.</p>
</section>
<section id="시계열-분석의-중요성" class="level2">
<h2 class="anchored" data-anchor-id="시계열-분석의-중요성">시계열 분석의 중요성</h2>
<p>시계열 분석은 다음과 같은 이유로 중요합니다.</p>
<ul>
<li><strong>예측</strong>: 과거 데이터를 기반으로 미래 값을 예측합니다. (예: 내일의 주가 예측)</li>
<li><strong>패턴 인식</strong>: 계절성, 추세, 주기 등 데이터 내의 의미 있는 패턴을 파악합니다.</li>
<li><strong>이상 감지</strong>: 일반적인 패턴에서 벗어나는 특이점을 탐지합니다. (예: 시스템 오류 감지)</li>
<li><strong>정책 결정</strong>: 분석 결과를 바탕으로 더 나은 의사 결정을 내릴 수 있습니다.</li>
</ul>
</section>
<section id="python을-이용한-시계열-데이터-분석-기초" class="level2">
<h2 class="anchored" data-anchor-id="python을-이용한-시계열-데이터-분석-기초">Python을 이용한 시계열 데이터 분석 기초</h2>
<p>이 튜토리얼에서는 Python의 <code>pandas</code>와 <code>matplotlib</code> 라이브러리를 사용하여 기본적인 시계열 데이터 분석을 수행하는 방법을 알아봅니다.</p>
<section id="필요한-라이브러리-불러오기" class="level3">
<h3 class="anchored" data-anchor-id="필요한-라이브러리-불러오기">1. 필요한 라이브러리 불러오기</h3>
<p>먼저, 데이터 분석에 필요한 라이브러리들을 불러옵니다.</p>
<div id="load-libraries" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.font_manager <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> fm</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> platform <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 운영체제 확인을 위해 추가</span></span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># --- Matplotlib 한글 폰트 설정 ---</span></span>
<span id="cb1-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb1-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> platform.system() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Windows'</span>:</span>
<span id="cb1-11">        plt.rc(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'font'</span>, family<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NanumGothic'</span>)</span>
<span id="cb1-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> platform.system() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Darwin'</span>: </span>
<span id="cb1-13">        plt.rc(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'font'</span>, family<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'AppleGothic'</span>) </span>
<span id="cb1-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb1-15">        plt.rc(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'font'</span>, family<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NanumGothic'</span>)</span>
<span id="cb1-16"></span>
<span id="cb1-17">    plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'axes.unicode_minus'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 마이너스 부호 깨짐 방지</span></span>
<span id="cb1-18">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Matplotlib font configured for Korean on </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>platform<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>system()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb1-21">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Error setting up Matplotlib font: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-22">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Please ensure a Korean-supporting font (like NanumGothic) is installed."</span>)</span>
<span id="cb1-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> platform.system() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Windows'</span>:</span>
<span id="cb1-24">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"On Windows, please install Nanum fonts (e.g., from Naver Hangeul Hangeul) and restart your kernel."</span>)</span>
<span id="cb1-25">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You might also need to clear Matplotlib's font cache (delete the .json file in ~/.matplotlib)."</span>)</span>
<span id="cb1-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> platform.system() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Linux'</span>:</span>
<span id="cb1-27">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"On Linux, ensure 'fonts-nanum' is installed (e.g., via apt-get) and Matplotlib's font cache is updated."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Matplotlib font configured for Korean on Windows.</code></pre>
</div>
</div>
</section>
<section id="샘플-시계열-데이터-생성" class="level3">
<h3 class="anchored" data-anchor-id="샘플-시계열-데이터-생성">2. 샘플 시계열 데이터 생성</h3>
<p>분석을 위해 간단한 샘플 시계열 데이터를 생성하겠습니다. 2023년 1월 1일부터 100일간의 가상 데이터를 만듭니다.</p>
<div id="generate-sample-data" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 날짜 범위 생성</span></span>
<span id="cb3-2">date_rng <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.date_range(start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023-01-01'</span>, end<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023-04-10'</span>, freq<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'D'</span>)</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 프레임 생성</span></span>
<span id="cb3-5">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(date_rng, columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>])</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 임의의 데이터 생성 (예: 웹사이트 방문자 수)</span></span>
<span id="cb3-8">data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'visitors'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(date_rng)))</span>
<span id="cb3-9"></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 'date' 컬럼을 인덱스로 설정</span></span>
<span id="cb3-11">data.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(data.head())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            visitors
date                
2023-01-01       192
2023-01-02       144
2023-01-03       159
2023-01-04       186
2023-01-05       114</code></pre>
</div>
</div>
</section>
<section id="시계열-데이터-시각화" class="level3">
<h3 class="anchored" data-anchor-id="시계열-데이터-시각화">3. 시계열 데이터 시각화</h3>
<p>생성된 시계열 데이터를 시각화하여 전반적인 추세를 파악합니다.</p>
<div id="cell-fig-time-series-plot" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb5-2">plt.plot(data.index, data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'visitors'</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'일별 방문자 수'</span>)</span>
<span id="cb5-3">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'일별 웹사이트 방문자 수'</span>)</span>
<span id="cb5-4">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'날짜'</span>)</span>
<span id="cb5-5">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'방문자 수'</span>)</span>
<span id="cb5-6">plt.legend()</span>
<span id="cb5-7">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb5-8">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div id="fig-time-series-plot" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-time-series-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://beomdo-park.github.io/posts/ABC_week01_data analysis/index_files/figure-html/fig-time-series-plot-output-1.png" width="964" height="524" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-time-series-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: 일별 웹사이트 방문자 수
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="이동-평균moving-average-계산-및-시각화" class="level3">
<h3 class="anchored" data-anchor-id="이동-평균moving-average-계산-및-시각화">4. 이동 평균(Moving Average) 계산 및 시각화</h3>
<p>이동 평균은 단기적인 변동을 완화하여 장기적인 추세를 파악하는 데 도움을 줍니다. 7일 이동 평균을 계산하고 시각화해 보겠습니다.</p>
<div id="cell-fig-moving-average" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 7일 이동 평균 계산</span></span>
<span id="cb6-2">data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rolling_mean_7'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'visitors'</span>].rolling(window<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>).mean()</span>
<span id="cb6-3"></span>
<span id="cb6-4">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb6-5">plt.plot(data.index, data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'visitors'</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'일별 방문자 수'</span>)</span>
<span id="cb6-6">plt.plot(data.index, data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rolling_mean_7'</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'7일 이동 평균'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>)</span>
<span id="cb6-7">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'일별 웹사이트 방문자 수 및 7일 이동 평균'</span>)</span>
<span id="cb6-8">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'날짜'</span>)</span>
<span id="cb6-9">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'방문자 수'</span>)</span>
<span id="cb6-10">plt.legend()</span>
<span id="cb6-11">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb6-12">plt.show()</span>
<span id="cb6-13"></span>
<span id="cb6-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(data.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span></code></pre></div>
<div class="cell-output cell-output-display">
<div id="fig-moving-average" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-moving-average-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://beomdo-park.github.io/posts/ABC_week01_data analysis/index_files/figure-html/fig-moving-average-output-1.png" width="964" height="524" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-moving-average-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: 7일 이동 평균을 포함한 방문자 수
</figcaption>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>            visitors  rolling_mean_7
date                                
2023-01-01       192             NaN
2023-01-02       144             NaN
2023-01-03       159             NaN
2023-01-04       186             NaN
2023-01-05       114             NaN
2023-01-06       145             NaN
2023-01-07       165      157.857143
2023-01-08       187      157.142857
2023-01-09       139      156.428571
2023-01-10       142      154.000000</code></pre>
</div>
</div>
</section>
<section id="시계열-분해-decomposition---선택-사항" class="level3">
<h3 class="anchored" data-anchor-id="시계열-분해-decomposition---선택-사항">5. 시계열 분해 (Decomposition) - (선택 사항)</h3>
<p>더 고급 분석에서는 시계열 데이터를 추세(Trend), 계절성(Seasonality), 잔차(Residual)로 분해하여 각 구성 요소를 분석할 수 있습니다. <code>statsmodels</code> 라이브러리를 사용하면 이를 수행할 수 있습니다.</p>
<div id="cell-fig-decomposition" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.tsa.seasonal <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seasonal_decompose</span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시계열 분해 (덧셈 모델)</span></span>
<span id="cb8-4">decomposition <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> seasonal_decompose(data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'visitors'</span>], model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'additive'</span>, period<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># period는 데이터의 주기에 따라 설정</span></span>
<span id="cb8-5"></span>
<span id="cb8-6">trend <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> decomposition.trend</span>
<span id="cb8-7">seasonal <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> decomposition.seasonal</span>
<span id="cb8-8">residual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> decomposition.resid</span>
<span id="cb8-9"></span>
<span id="cb8-10">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))</span>
<span id="cb8-11">plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">411</span>)</span>
<span id="cb8-12">plt.plot(data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'visitors'</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Original'</span>)</span>
<span id="cb8-13">plt.legend(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'upper left'</span>)</span>
<span id="cb8-14">plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">412</span>)</span>
<span id="cb8-15">plt.plot(trend, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Trend'</span>)</span>
<span id="cb8-16">plt.legend(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'upper left'</span>)</span>
<span id="cb8-17">plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">413</span>)</span>
<span id="cb8-18">plt.plot(seasonal,label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Seasonality'</span>)</span>
<span id="cb8-19">plt.legend(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'upper left'</span>)</span>
<span id="cb8-20">plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">414</span>)</span>
<span id="cb8-21">plt.plot(residual, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Residuals'</span>)</span>
<span id="cb8-22">plt.legend(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'upper left'</span>)</span>
<span id="cb8-23">plt.tight_layout()</span>
<span id="cb8-24">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div id="fig-decomposition" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-decomposition-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://beomdo-park.github.io/posts/ABC_week01_data analysis/index_files/figure-html/fig-decomposition-output-1.png" width="1142" height="758" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-decomposition-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: 시계열 분해 결과
</figcaption>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="결론" class="level2">
<h2 class="anchored" data-anchor-id="결론">결론</h2>
<p>이 튜토리얼에서는 Python을 사용하여 시계열 데이터를 생성하고, 시각화하며, 이동 평균을 계산하는 기본적인 방법을 살펴보았습니다. 시계열 분석은 매우 광범위한 분야이며, 이 튜토리얼은 그 시작점에 불과합니다. 더 나아가 ARIMA, SARIMA, Prophet과 같은 고급 모델을 학습하여 더 정교한 예측 및 분석을 수행할 수 있습니다.</p>
<hr>


</section>

 ]]></description>
  <category>ABC 프로젝트 멘토링</category>
  <guid>https://beomdo-park.github.io/posts/ABC_week01_data analysis/</guid>
  <pubDate>Sat, 24 May 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>[2025 ABC 프로젝트 멘토링 8기] 프로젝트 1주차</title>
  <dc:creator>Beomdo Park</dc:creator>
  <link>https://beomdo-park.github.io/posts/testpost/</link>
  <description><![CDATA[ 





<p>1주차로 기초 시계열 분석을 진행</p>
<section id="시계열-데이터란" class="level2">
<h2 class="anchored" data-anchor-id="시계열-데이터란">시계열 데이터란?</h2>
<p>시계열 데이터(Time Series Data)는 시간 순서대로 정렬된 데이터 포인터들의 연속입니다. 예를 들어, 주식 가격, 월별 강수량, 웹사이트 트래픽 등이 시계열 데이터에 해당합니다. 이러한 데이터는 시간의 흐름에 따른 패턴이나 추세를 분석하는 데 사용됩니다.</p>
</section>
<section id="시계열-분석의-중요성" class="level2">
<h2 class="anchored" data-anchor-id="시계열-분석의-중요성">시계열 분석의 중요성</h2>
<p>시계열 분석은 다음과 같은 이유로 중요합니다.</p>
<ul>
<li><strong>예측</strong>: 과거 데이터를 기반으로 미래 값을 예측합니다. (예: 내일의 주가 예측)</li>
<li><strong>패턴 인식</strong>: 계절성, 추세, 주기 등 데이터 내의 의미 있는 패턴을 파악합니다.</li>
<li><strong>이상 감지</strong>: 일반적인 패턴에서 벗어나는 특이점을 탐지합니다. (예: 시스템 오류 감지)</li>
<li><strong>정책 결정</strong>: 분석 결과를 바탕으로 더 나은 의사 결정을 내릴 수 있습니다.</li>
</ul>
</section>
<section id="python을-이용한-시계열-데이터-분석-기초" class="level2">
<h2 class="anchored" data-anchor-id="python을-이용한-시계열-데이터-분석-기초">Python을 이용한 시계열 데이터 분석 기초</h2>
<p>이 튜토리얼에서는 Python의 <code>pandas</code>와 <code>matplotlib</code> 라이브러리를 사용하여 기본적인 시계열 데이터 분석을 수행하는 방법을 알아봅니다.</p>
<section id="필요한-라이브러리-불러오기" class="level3">
<h3 class="anchored" data-anchor-id="필요한-라이브러리-불러오기">1. 필요한 라이브러리 불러오기</h3>
<p>먼저, 데이터 분석에 필요한 라이브러리들을 불러옵니다.</p>
<div id="load-libraries" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime</span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.font_manager <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> fm</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> platform <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 운영체제 확인을 위해 추가</span></span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># --- Matplotlib 한글 폰트 설정 ---</span></span>
<span id="cb1-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb1-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> platform.system() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Windows'</span>:</span>
<span id="cb1-11">        plt.rc(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'font'</span>, family<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NanumGothic'</span>)</span>
<span id="cb1-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> platform.system() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Darwin'</span>: </span>
<span id="cb1-13">        plt.rc(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'font'</span>, family<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'AppleGothic'</span>) </span>
<span id="cb1-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb1-15">        plt.rc(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'font'</span>, family<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'NanumGothic'</span>)</span>
<span id="cb1-16"></span>
<span id="cb1-17">    plt.rcParams[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'axes.unicode_minus'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 마이너스 부호 깨짐 방지</span></span>
<span id="cb1-18">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Matplotlib font configured for Korean on </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>platform<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>system()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">."</span>)</span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb1-21">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Error setting up Matplotlib font: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb1-22">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Please ensure a Korean-supporting font (like NanumGothic) is installed."</span>)</span>
<span id="cb1-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> platform.system() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Windows'</span>:</span>
<span id="cb1-24">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"On Windows, please install Nanum fonts (e.g., from Naver Hangeul Hangeul) and restart your kernel."</span>)</span>
<span id="cb1-25">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"You might also need to clear Matplotlib's font cache (delete the .json file in ~/.matplotlib)."</span>)</span>
<span id="cb1-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> platform.system() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Linux'</span>:</span>
<span id="cb1-27">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"On Linux, ensure 'fonts-nanum' is installed (e.g., via apt-get) and Matplotlib's font cache is updated."</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Matplotlib font configured for Korean on Linux.</code></pre>
</div>
</div>
</section>
<section id="샘플-시계열-데이터-생성" class="level3">
<h3 class="anchored" data-anchor-id="샘플-시계열-데이터-생성">2. 샘플 시계열 데이터 생성</h3>
<p>분석을 위해 간단한 샘플 시계열 데이터를 생성하겠습니다. 2023년 1월 1일부터 100일간의 가상 데이터를 만듭니다.</p>
<div id="generate-sample-data" class="cell" data-execution_count="2">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 날짜 범위 생성</span></span>
<span id="cb3-2">date_rng <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.date_range(start<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023-01-01'</span>, end<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2023-04-10'</span>, freq<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'D'</span>)</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 데이터 프레임 생성</span></span>
<span id="cb3-5">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(date_rng, columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>])</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 임의의 데이터 생성 (예: 웹사이트 방문자 수)</span></span>
<span id="cb3-8">data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'visitors'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.random.randint(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">200</span>, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(date_rng)))</span>
<span id="cb3-9"></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 'date' 컬럼을 인덱스로 설정</span></span>
<span id="cb3-11">data.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'date'</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb3-12"></span>
<span id="cb3-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(data.head())</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>            visitors
date                
2023-01-01        54
2023-01-02       128
2023-01-03        94
2023-01-04       116
2023-01-05       108</code></pre>
</div>
</div>
</section>
<section id="시계열-데이터-시각화" class="level3">
<h3 class="anchored" data-anchor-id="시계열-데이터-시각화">3. 시계열 데이터 시각화</h3>
<p>생성된 시계열 데이터를 시각화하여 전반적인 추세를 파악합니다.</p>
<div id="cell-fig-time-series-plot" class="cell" data-execution_count="3">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb5-2">plt.plot(data.index, data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'visitors'</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'일별 방문자 수'</span>)</span>
<span id="cb5-3">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'일별 웹사이트 방문자 수'</span>)</span>
<span id="cb5-4">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'날짜'</span>)</span>
<span id="cb5-5">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'방문자 수'</span>)</span>
<span id="cb5-6">plt.legend()</span>
<span id="cb5-7">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb5-8">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div id="fig-time-series-plot" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-time-series-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://beomdo-park.github.io/posts/testpost/index_files/figure-html/fig-time-series-plot-output-1.png" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-time-series-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: 일별 웹사이트 방문자 수
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="이동-평균moving-average-계산-및-시각화" class="level3">
<h3 class="anchored" data-anchor-id="이동-평균moving-average-계산-및-시각화">4. 이동 평균(Moving Average) 계산 및 시각화</h3>
<p>이동 평균은 단기적인 변동을 완화하여 장기적인 추세를 파악하는 데 도움을 줍니다. 7일 이동 평균을 계산하고 시각화해 보겠습니다.</p>
<div id="cell-fig-moving-average" class="cell" data-execution_count="4">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 7일 이동 평균 계산</span></span>
<span id="cb6-2">data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rolling_mean_7'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'visitors'</span>].rolling(window<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>).mean()</span>
<span id="cb6-3"></span>
<span id="cb6-4">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb6-5">plt.plot(data.index, data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'visitors'</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'일별 방문자 수'</span>)</span>
<span id="cb6-6">plt.plot(data.index, data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rolling_mean_7'</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'7일 이동 평균'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>)</span>
<span id="cb6-7">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'일별 웹사이트 방문자 수 및 7일 이동 평균'</span>)</span>
<span id="cb6-8">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'날짜'</span>)</span>
<span id="cb6-9">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'방문자 수'</span>)</span>
<span id="cb6-10">plt.legend()</span>
<span id="cb6-11">plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb6-12">plt.show()</span>
<span id="cb6-13"></span>
<span id="cb6-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(data.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span></code></pre></div>
<div class="cell-output cell-output-display">
<div id="fig-moving-average" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-moving-average-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://beomdo-park.github.io/posts/testpost/index_files/figure-html/fig-moving-average-output-1.png" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-moving-average-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: 7일 이동 평균을 포함한 방문자 수
</figcaption>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>            visitors  rolling_mean_7
date                                
2023-01-01        54             NaN
2023-01-02       128             NaN
2023-01-03        94             NaN
2023-01-04       116             NaN
2023-01-05       108             NaN
2023-01-06       146             NaN
2023-01-07       198      120.571429
2023-01-08       181      138.714286
2023-01-09       196      148.428571
2023-01-10       179      160.571429</code></pre>
</div>
</div>
</section>
<section id="시계열-분해-decomposition---선택-사항" class="level3">
<h3 class="anchored" data-anchor-id="시계열-분해-decomposition---선택-사항">5. 시계열 분해 (Decomposition) - (선택 사항)</h3>
<p>더 고급 분석에서는 시계열 데이터를 추세(Trend), 계절성(Seasonality), 잔차(Residual)로 분해하여 각 구성 요소를 분석할 수 있습니다. <code>statsmodels</code> 라이브러리를 사용하면 이를 수행할 수 있습니다.</p>
<div id="cell-fig-decomposition" class="cell" data-execution_count="5">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> statsmodels.tsa.seasonal <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seasonal_decompose</span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 시계열 분해 (덧셈 모델)</span></span>
<span id="cb8-4">decomposition <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> seasonal_decompose(data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'visitors'</span>], model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'additive'</span>, period<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># period는 데이터의 주기에 따라 설정</span></span>
<span id="cb8-5"></span>
<span id="cb8-6">trend <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> decomposition.trend</span>
<span id="cb8-7">seasonal <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> decomposition.seasonal</span>
<span id="cb8-8">residual <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> decomposition.resid</span>
<span id="cb8-9"></span>
<span id="cb8-10">plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))</span>
<span id="cb8-11">plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">411</span>)</span>
<span id="cb8-12">plt.plot(data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'visitors'</span>], label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Original'</span>)</span>
<span id="cb8-13">plt.legend(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'upper left'</span>)</span>
<span id="cb8-14">plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">412</span>)</span>
<span id="cb8-15">plt.plot(trend, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Trend'</span>)</span>
<span id="cb8-16">plt.legend(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'upper left'</span>)</span>
<span id="cb8-17">plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">413</span>)</span>
<span id="cb8-18">plt.plot(seasonal,label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Seasonality'</span>)</span>
<span id="cb8-19">plt.legend(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'upper left'</span>)</span>
<span id="cb8-20">plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">414</span>)</span>
<span id="cb8-21">plt.plot(residual, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Residuals'</span>)</span>
<span id="cb8-22">plt.legend(loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'upper left'</span>)</span>
<span id="cb8-23">plt.tight_layout()</span>
<span id="cb8-24">plt.show()</span></code></pre></div>
<div class="cell-output cell-output-display">
<div id="fig-decomposition" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-decomposition-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://beomdo-park.github.io/posts/testpost/index_files/figure-html/fig-decomposition-output-1.png" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-decomposition-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: 시계열 분해 결과
</figcaption>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="결론" class="level2">
<h2 class="anchored" data-anchor-id="결론">결론</h2>
<p>이 튜토리얼에서는 Python을 사용하여 시계열 데이터를 생성하고, 시각화하며, 이동 평균을 계산하는 기본적인 방법을 살펴보았습니다. 시계열 분석은 매우 광범위한 분야이며, 이 튜토리얼은 그 시작점에 불과합니다. 더 나아가 ARIMA, SARIMA, Prophet과 같은 고급 모델을 학습하여 더 정교한 예측 및 분석을 수행할 수 있습니다.</p>
<hr>


</section>

 ]]></description>
  <category>ABC 프로젝트 멘토링</category>
  <guid>https://beomdo-park.github.io/posts/testpost/</guid>
  <pubDate>Sat, 24 May 2025 00:00:00 GMT</pubDate>
</item>
<item>
  <title>Blog Posts</title>
  <dc:creator>Beomdo Park</dc:creator>
  <link>https://beomdo-park.github.io/posts/my-first-post/</link>
  <description><![CDATA[ 





<p>여기에 마크다운으로 내용을 작성합니다. Quarto는 Pandoc 마크다운을 확장하여 다양한 기능을 제공합니다.</p>
<section id="코드-실행" class="level2">
<h2 class="anchored" data-anchor-id="코드-실행">코드 실행</h2>
<p>Python 코드 셀 예시입니다.</p>
<div id="cell-fig-simple-plot" class="cell" data-execution_count="1">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-3"></span>
<span id="cb1-4">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.pi, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb1-5">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.sin(x)</span>
<span id="cb1-6"></span>
<span id="cb1-7">plt.plot(x, y)</span>
<span id="cb1-8">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sine Wave"</span>)</span>
<span id="cb1-9">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"X-axis"</span>)</span>
<span id="cb1-10">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Y-axis"</span>)</span>
<span id="cb1-11">plt.show()</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Hello World"</span>)</span></code></pre></div>
<div class="cell-output cell-output-display">
<div id="fig-simple-plot" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-simple-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://beomdo-park.github.io/posts/my-first-post/index_files/figure-html/fig-simple-plot-output-1.png" width="608" height="449" class="figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-simple-plot-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: 간단한 Matplotlib 플롯
</figcaption>
</figure>
</div>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>Hello World</code></pre>
</div>
</div>


</section>

 ]]></description>
  <category>news</category>
  <category>code</category>
  <category>analysis</category>
  <guid>https://beomdo-park.github.io/posts/my-first-post/</guid>
  <pubDate>Wed, 14 May 2025 00:00:00 GMT</pubDate>
  <media:content url="https://beomdo-park.github.io/posts/my-first-post/image.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
